name: CI

on:
    pull_request:
        branches: [prd, stg, dev]
        types: [opened, reopened, synchronize, edited]
        paths-ignore: # Pushes that include only these changed files won't trigger actions
        - '**/README.md'
        - '**/.gitignore'
        - '**/doc/*'
env:    
    tf_version: ">=1.4.5" # must match value in terraform/modules/app/main.tf

jobs:
    env:
        name: Set Env Vars
        runs-on: ubuntu-latest
        steps:
          - name: Set up PRD Environment Variables
            if: ${{ github.base_ref == 'prd' }}
            # Replace the app_name with the project name
            run: |
              matrix='{
                "env":[
                  {
                    "app_name":"powerlinkerlite",
                    "tf_working_dir":"./terraform/prd",
                    "aws_account":"646364352403",
                    "aws_gha_role":"byuawsfhtl-prd-gha"
                  }
                ]
              }'
              echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV
    
          - name: Set up STG Environment Variables
            if: ${{ github.base_ref == 'stg' || 'dev' }}
            # Replace the app_name with the project name
            run: |
              matrix='{
                "env":[
                  {
                    "app_name":"powerlinkerlite",
                    "tf_working_dir":"./terraform/stg",
                    "aws_account":"222021474030",
                    "aws_gha_role":"byuawsfhtl-stg-gha"
                  }
                ]
              }'
              echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV
    
        outputs:
          matrix: ${{ env.matrix }}

    format:
      name: Terraform Format
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            sparse-checkout: |
              terraform
  
        - name: Check Terraform Formatting
          working-directory: "./terraform"
          run: terraform fmt -check -recursive

    standardCheck:
            name: Python Standard Check
            runs-on: ubuntu-latest
            steps:
              - name: Follow Python Standard
                uses: byuawsfhtl/PythonStandardAction@v1.0.9

    checkMeds:
      name: Check Meds (merge every day)
      runs-on: ubuntu-latest
      steps:
          - name: Check Meds
            uses: byuawsfhtl/MedsAction@v1.0.0

    docker:
        name: Docker Build
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2

          - name: Build the Docker image
            run: |
                docker build back-end --file docker/Dockerfile

    react:
        name: React Build
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2

          - name: Build the React app
            working-directory: "front-end"
            run: |
              npm ci
              npm run build --if-present

    plan:
        name: Terraform Plan
        runs-on: ubuntu-latest
        needs: [env, format]
        strategy:
            matrix: ${{ fromJson(needs.env.outputs.matrix) }}
        permissions:
          contents: read
          actions: read
          pull-requests: write
          id-token: write
        steps:
          - uses: actions/checkout@v2

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4.0.1
            with:
                role-to-assume: "arn:aws:iam::${{ matrix.env.aws_account }}:role/${{ matrix.env.aws_gha_role }}"
                role-session-name: ${{ github.sha }}
                aws-region: us-west-2

          - name: Terraform Setup
            uses: hashicorp/setup-terraform@v1
            with:
                terraform_version: ${{ env.tf_version }}

          - name: Terraform Init
            working-directory: "${{ matrix.env.tf_working_dir }}/app"
            run: terraform init

          - name: Terraform Plan
            working-directory: "${{ matrix.env.tf_working_dir }}/app"
            run: terraform plan -input=false -out=plan
            
          - name: Comment Terraform Plan
            uses: actions/github-script@v7
            with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const fs = require('fs');
                  const plan = fs.readFileSync('${{ matrix.env.tf_working_dir }}/app/plan', 'utf8');
                  const output = `## Terraform Plan ðŸ“‹
                  
                  \`\`\`
                  ${plan}
                  \`\`\`
                  `;
                  
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  });
