name: Deploy

on:
    push:
        branches: [prd, stg]
        paths-ignore: # Pushes that include only these changed files won't trigger actions
          - '**/README.md'
          - '**/.gitignore'
          - '**/doc/*'

env:
    tf_version: '>=1.4.5' # must match value in terraform-iac/*/app/main.tf

jobs:
    env:
        name: Set Env Vars
        runs-on: ubuntu-latest
        steps:
          - name: Set up PRD Environment Variables
            if: github.ref == 'refs/heads/prd'
            # Replace the app_name with the project name
            run: |
                matrix='{
                    "env":[
                        {
                            "deployment_branch":"prd",
                            "app_name":"powerlinkerlite",
                            "tf_working_dir":"./terraform/prd",
                            "aws_account":"646364352403",
                            "aws_gha_role":"byuawsfhtl-prd-gha"
                        }
                    ]
                }'
                echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

          - name: Set up STG Environment Variables
            if: github.ref == 'refs/heads/stg'
            # Replace the app_name with the project name
            run: |
                matrix='{
                    "env":[
                        {
                            "deployment_branch":"stg",
                            "app_name":"powerlinkerlite",
                            "tf_working_dir":"./terraform/stg",
                            "aws_account":"222021474030",
                            "aws_gha_role":"byuawsfhtl-stg-gha"
                        }
                    ]
                }'
                echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

        outputs:
            matrix: ${{ env.matrix }}

    setup:
        name: Setup
        runs-on: ubuntu-latest
        needs: env
        strategy:
            matrix: ${{ fromJson(needs.env.outputs.matrix) }}
        steps:
          - name: Check out
            uses: actions/checkout@v2

          - name: Check Terraform Formatting
            working-directory: './terraform'
            run: terraform fmt -check -recursive

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: [env, setup]
        strategy:
            matrix: ${{ fromJson(needs.env.outputs.matrix) }}
        permissions:
          actions: read
          contents: read
          id-token: write
          pull-requests: write
        steps:
          - name: Check out
            uses: actions/checkout@v2

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4.0.1
            with:
                role-to-assume: "arn:aws:iam::${{ matrix.env.aws_account }}:role/${{ matrix.env.aws_gha_role }}"
                role-session-name: ${{ github.sha }}
                aws-region: us-west-2

          - name: Log into Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Get Current Timestamp
            id: date
            run: echo "timestamp=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

          - name: 'Create env file'
            run: |
              touch ./back-end/lambda/.env
              echo DEPLOYMENT_BRANCH=${{ matrix.env.deployment_branch }} >> ./back-end/lambda/.env

          - name: Build and Push the Docker image
            env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                ECR_REPO: "${{ matrix.env.app_name }}-repo"
                APP_NAME: ${{ matrix.env.app_name}}
                IMAGE_TAG: ${{ steps.date.outputs.timestamp }}
            run: |
                docker build back-end --file docker/Dockerfile --tag $ECR_REGISTRY/$ECR_REPO:$APP_NAME-$IMAGE_TAG
                docker push $ECR_REGISTRY/$ECR_REPO:$APP_NAME-$IMAGE_TAG

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: [env, setup, build]
        strategy:
            matrix: ${{ fromJson(needs.env.outputs.matrix) }}
        permissions:
          actions: read
          contents: read
          id-token: write
          pull-requests: write
        steps:
          - name: Check out
            uses: actions/checkout@v2

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4.0.1
            with:
                role-to-assume: "arn:aws:iam::${{ matrix.env.aws_account }}:role/${{ matrix.env.aws_gha_role }}"
                role-session-name: ${{ github.sha }}
                aws-region: us-west-2

          - name: Terraform Setup
            uses: hashicorp/setup-terraform@v1
            with:
                terraform_version: ${{ env.tf_version }}
                terraform_wrapper: false

          - name: Terraform Init
            working-directory: "${{ matrix.env.tf_working_dir }}/app"
            run: terraform init

          - name: Terraform Plan
            working-directory: "${{ matrix.env.tf_working_dir }}/app"
            run: terraform plan -input=false -out=plan

          - name: Terraform Apply
            working-directory: "${{ matrix.env.tf_working_dir }}/app"
            run: terraform apply plan

          - name: Get Terraform Outputs
            id: terraform-outputs
            working-directory: "${{ matrix.env.tf_working_dir }}/app"
            run: |
                echo "s3_bucket=$(terraform output -raw s3_bucket)" >> $GITHUB_OUTPUT
                echo "cf_distribution_id=$(terraform output -raw cf_distribution_id)" >> $GITHUB_OUTPUT
          
          - name: Build React
            working-directory: "front-end"
            run: |
              npm ci
              npm run build --if-present

          - name: Copy React code to S3 Site Bucket
            id: deploy
            run: aws s3 sync front-end/build s3://${{ steps.terraform-outputs.outputs.s3_bucket }}

          - name: Invalidate CloudFront Cache
            run: aws cloudfront create-invalidation --path '/*' --distribution-id ${{ steps.terraform-outputs.outputs.cf_distribution_id }}
                